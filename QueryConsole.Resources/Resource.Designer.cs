//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QueryConsole.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QueryConsole.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not found {0} attribute in the element {1}!.
        /// </summary>
        public static string Conf_AttributeDoesntExist {
            get {
                return ResourceManager.GetString("Conf_AttributeDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element {0} is not found!.
        /// </summary>
        public static string Conf_ElementDoesntExist {
            get {
                return ResourceManager.GetString("Conf_ElementDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration file has errors!.
        /// </summary>
        public static string Conf_Error {
            get {
                return ResourceManager.GetString("Conf_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current data provider is not found!.
        /// </summary>
        public static string Data_ProviderNotFound {
            get {
                return ResourceManager.GetString("Data_ProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export has been failed!.
        /// </summary>
        public static string Export_Fail {
            get {
                return ResourceManager.GetString("Export_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export has been successful!.
        /// </summary>
        public static string Export_Success {
            get {
                return ResourceManager.GetString("Export_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} is not found!.
        /// </summary>
        public static string IO_FileDoesntExist {
            get {
                return ResourceManager.GetString("IO_FileDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose database!.
        /// </summary>
        public static string Q_ConStrSelectionError {
            get {
                return ResourceManager.GetString("Q_ConStrSelectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query field is empty!.
        /// </summary>
        public static string Q_EmptyQueryError {
            get {
                return ResourceManager.GetString("Q_EmptyQueryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose data provider!.
        /// </summary>
        public static string Q_ProviderSelectionError {
            get {
                return ResourceManager.GetString("Q_ProviderSelectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command succeeded.
        /// </summary>
        public static string Q_Result_NonQuery {
            get {
                return ResourceManager.GetString("Q_Result_NonQuery", resourceCulture);
            }
        }
    }
}
